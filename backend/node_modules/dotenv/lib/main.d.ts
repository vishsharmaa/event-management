import type { URL } from 'url';
export interface DotenvParseOutput {
  [name: string]: string;
}
export interface DotenvPopulateOutput {
  [name: string]: string;
}
export function parse<T extends DotenvParseOutput = DotenvParseOutput>(
  src: string | Buffer
): T;
export interface DotenvConfigOptions {
  path?: string | string[] | URL;
  encoding?: string;
  quiet?: boolean; 
  debug?: boolean; 
  override?: boolean;
  processEnv?: DotenvPopulateInput;
  DOTENV_KEY?: string;
}
export interface DotenvConfigOutput {
  error?: Error;
  parsed?: DotenvParseOutput;
}
export interface DotenvPopulateOptions {
  debug?: boolean;
  override?: boolean;
}
export interface DotenvPopulateInput {
  [name: string]: string;
}
export function config(options?: DotenvConfigOptions): DotenvConfigOutput;
export function configDotenv(options?: DotenvConfigOptions): DotenvConfigOutput;
export function populate(
  processEnv: DotenvPopulateInput,
  parsed: DotenvPopulateInput,
  options?: DotenvConfigOptions
): DotenvPopulateOutput;
export function decrypt(encrypted: string, keyStr: string): string;
